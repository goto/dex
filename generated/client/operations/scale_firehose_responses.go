// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/goto/dex/generated/models"
)

// ScaleFirehoseReader is a Reader for the ScaleFirehose structure.
type ScaleFirehoseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScaleFirehoseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewScaleFirehoseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewScaleFirehoseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewScaleFirehoseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewScaleFirehoseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewScaleFirehoseOK creates a ScaleFirehoseOK with default headers values
func NewScaleFirehoseOK() *ScaleFirehoseOK {
	return &ScaleFirehoseOK{}
}

/*
	ScaleFirehoseOK describes a response with status code 200, with default header values.

Successfully applied update.
*/
type ScaleFirehoseOK struct {
	Payload *models.Firehose
}

func (o *ScaleFirehoseOK) Error() string {
	return fmt.Sprintf("[POST /dex/firehoses/{firehoseUrn}/scale][%d] scaleFirehoseOK  %+v", 200, o.Payload)
}
func (o *ScaleFirehoseOK) GetPayload() *models.Firehose {
	return o.Payload
}

func (o *ScaleFirehoseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Firehose)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScaleFirehoseBadRequest creates a ScaleFirehoseBadRequest with default headers values
func NewScaleFirehoseBadRequest() *ScaleFirehoseBadRequest {
	return &ScaleFirehoseBadRequest{}
}

/*
	ScaleFirehoseBadRequest describes a response with status code 400, with default header values.

Update request is not valid.
*/
type ScaleFirehoseBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ScaleFirehoseBadRequest) Error() string {
	return fmt.Sprintf("[POST /dex/firehoses/{firehoseUrn}/scale][%d] scaleFirehoseBadRequest  %+v", 400, o.Payload)
}
func (o *ScaleFirehoseBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ScaleFirehoseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScaleFirehoseNotFound creates a ScaleFirehoseNotFound with default headers values
func NewScaleFirehoseNotFound() *ScaleFirehoseNotFound {
	return &ScaleFirehoseNotFound{}
}

/*
	ScaleFirehoseNotFound describes a response with status code 404, with default header values.

Firehose with given URN was not found
*/
type ScaleFirehoseNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ScaleFirehoseNotFound) Error() string {
	return fmt.Sprintf("[POST /dex/firehoses/{firehoseUrn}/scale][%d] scaleFirehoseNotFound  %+v", 404, o.Payload)
}
func (o *ScaleFirehoseNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ScaleFirehoseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScaleFirehoseInternalServerError creates a ScaleFirehoseInternalServerError with default headers values
func NewScaleFirehoseInternalServerError() *ScaleFirehoseInternalServerError {
	return &ScaleFirehoseInternalServerError{}
}

/*
	ScaleFirehoseInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ScaleFirehoseInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ScaleFirehoseInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dex/firehoses/{firehoseUrn}/scale][%d] scaleFirehoseInternalServerError  %+v", 500, o.Payload)
}
func (o *ScaleFirehoseInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ScaleFirehoseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ScaleFirehoseBody scale firehose body
swagger:model ScaleFirehoseBody
*/
type ScaleFirehoseBody struct {

	// Number of replicas to run.
	// Example: 2
	// Required: true
	Replicas *float64 `json:"replicas"`
}

// Validate validates this scale firehose body
func (o *ScaleFirehoseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateReplicas(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ScaleFirehoseBody) validateReplicas(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"replicas", "body", o.Replicas); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this scale firehose body based on context it is used
func (o *ScaleFirehoseBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ScaleFirehoseBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ScaleFirehoseBody) UnmarshalBinary(b []byte) error {
	var res ScaleFirehoseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
