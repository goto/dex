// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goto/dex/generated/models"
)

// GetProjectBySlugReader is a Reader for the GetProjectBySlug structure.
type GetProjectBySlugReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectBySlugReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectBySlugOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetProjectBySlugNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetProjectBySlugInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProjectBySlugOK creates a GetProjectBySlugOK with default headers values
func NewGetProjectBySlugOK() *GetProjectBySlugOK {
	return &GetProjectBySlugOK{}
}

/*
	GetProjectBySlugOK describes a response with status code 200, with default header values.

successful operation
*/
type GetProjectBySlugOK struct {
	Payload *models.Project
}

func (o *GetProjectBySlugOK) Error() string {
	return fmt.Sprintf("[GET /dex/projects/{slug}][%d] getProjectBySlugOK  %+v", 200, o.Payload)
}
func (o *GetProjectBySlugOK) GetPayload() *models.Project {
	return o.Payload
}

func (o *GetProjectBySlugOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectBySlugNotFound creates a GetProjectBySlugNotFound with default headers values
func NewGetProjectBySlugNotFound() *GetProjectBySlugNotFound {
	return &GetProjectBySlugNotFound{}
}

/*
	GetProjectBySlugNotFound describes a response with status code 404, with default header values.

project not found
*/
type GetProjectBySlugNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetProjectBySlugNotFound) Error() string {
	return fmt.Sprintf("[GET /dex/projects/{slug}][%d] getProjectBySlugNotFound  %+v", 404, o.Payload)
}
func (o *GetProjectBySlugNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetProjectBySlugNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectBySlugInternalServerError creates a GetProjectBySlugInternalServerError with default headers values
func NewGetProjectBySlugInternalServerError() *GetProjectBySlugInternalServerError {
	return &GetProjectBySlugInternalServerError{}
}

/*
	GetProjectBySlugInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetProjectBySlugInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetProjectBySlugInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dex/projects/{slug}][%d] getProjectBySlugInternalServerError  %+v", 500, o.Payload)
}
func (o *GetProjectBySlugInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetProjectBySlugInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
