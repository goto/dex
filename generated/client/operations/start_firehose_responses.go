// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goto/dex/generated/models"
)

// StartFirehoseReader is a Reader for the StartFirehose structure.
type StartFirehoseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartFirehoseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartFirehoseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartFirehoseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartFirehoseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartFirehoseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStartFirehoseOK creates a StartFirehoseOK with default headers values
func NewStartFirehoseOK() *StartFirehoseOK {
	return &StartFirehoseOK{}
}

/*
	StartFirehoseOK describes a response with status code 200, with default header values.

Successfully applied update.
*/
type StartFirehoseOK struct {
	Payload *models.Firehose
}

func (o *StartFirehoseOK) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}/start][%d] startFirehoseOK  %+v", 200, o.Payload)
}
func (o *StartFirehoseOK) GetPayload() *models.Firehose {
	return o.Payload
}

func (o *StartFirehoseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Firehose)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartFirehoseBadRequest creates a StartFirehoseBadRequest with default headers values
func NewStartFirehoseBadRequest() *StartFirehoseBadRequest {
	return &StartFirehoseBadRequest{}
}

/*
	StartFirehoseBadRequest describes a response with status code 400, with default header values.

Update request is not valid.
*/
type StartFirehoseBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *StartFirehoseBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}/start][%d] startFirehoseBadRequest  %+v", 400, o.Payload)
}
func (o *StartFirehoseBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *StartFirehoseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartFirehoseNotFound creates a StartFirehoseNotFound with default headers values
func NewStartFirehoseNotFound() *StartFirehoseNotFound {
	return &StartFirehoseNotFound{}
}

/*
	StartFirehoseNotFound describes a response with status code 404, with default header values.

Firehose with given URN was not found
*/
type StartFirehoseNotFound struct {
	Payload *models.ErrorResponse
}

func (o *StartFirehoseNotFound) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}/start][%d] startFirehoseNotFound  %+v", 404, o.Payload)
}
func (o *StartFirehoseNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *StartFirehoseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartFirehoseInternalServerError creates a StartFirehoseInternalServerError with default headers values
func NewStartFirehoseInternalServerError() *StartFirehoseInternalServerError {
	return &StartFirehoseInternalServerError{}
}

/*
	StartFirehoseInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type StartFirehoseInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *StartFirehoseInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}/start][%d] startFirehoseInternalServerError  %+v", 500, o.Payload)
}
func (o *StartFirehoseInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *StartFirehoseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
