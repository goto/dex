// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/goto/dex/generated/models"
)

// PartialUpdateFirehoseReader is a Reader for the PartialUpdateFirehose structure.
type PartialUpdateFirehoseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PartialUpdateFirehoseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPartialUpdateFirehoseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPartialUpdateFirehoseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPartialUpdateFirehoseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPartialUpdateFirehoseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPartialUpdateFirehoseOK creates a PartialUpdateFirehoseOK with default headers values
func NewPartialUpdateFirehoseOK() *PartialUpdateFirehoseOK {
	return &PartialUpdateFirehoseOK{}
}

/*
	PartialUpdateFirehoseOK describes a response with status code 200, with default header values.

Found firehose with given URN
*/
type PartialUpdateFirehoseOK struct {
	Payload *models.Firehose
}

func (o *PartialUpdateFirehoseOK) Error() string {
	return fmt.Sprintf("[PATCH /dex/firehoses/{firehoseUrn}][%d] partialUpdateFirehoseOK  %+v", 200, o.Payload)
}
func (o *PartialUpdateFirehoseOK) GetPayload() *models.Firehose {
	return o.Payload
}

func (o *PartialUpdateFirehoseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Firehose)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartialUpdateFirehoseBadRequest creates a PartialUpdateFirehoseBadRequest with default headers values
func NewPartialUpdateFirehoseBadRequest() *PartialUpdateFirehoseBadRequest {
	return &PartialUpdateFirehoseBadRequest{}
}

/*
	PartialUpdateFirehoseBadRequest describes a response with status code 400, with default header values.

Update request is not valid.
*/
type PartialUpdateFirehoseBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PartialUpdateFirehoseBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /dex/firehoses/{firehoseUrn}][%d] partialUpdateFirehoseBadRequest  %+v", 400, o.Payload)
}
func (o *PartialUpdateFirehoseBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PartialUpdateFirehoseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartialUpdateFirehoseNotFound creates a PartialUpdateFirehoseNotFound with default headers values
func NewPartialUpdateFirehoseNotFound() *PartialUpdateFirehoseNotFound {
	return &PartialUpdateFirehoseNotFound{}
}

/*
	PartialUpdateFirehoseNotFound describes a response with status code 404, with default header values.

Firehose with given URN was not found
*/
type PartialUpdateFirehoseNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PartialUpdateFirehoseNotFound) Error() string {
	return fmt.Sprintf("[PATCH /dex/firehoses/{firehoseUrn}][%d] partialUpdateFirehoseNotFound  %+v", 404, o.Payload)
}
func (o *PartialUpdateFirehoseNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PartialUpdateFirehoseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartialUpdateFirehoseInternalServerError creates a PartialUpdateFirehoseInternalServerError with default headers values
func NewPartialUpdateFirehoseInternalServerError() *PartialUpdateFirehoseInternalServerError {
	return &PartialUpdateFirehoseInternalServerError{}
}

/*
	PartialUpdateFirehoseInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type PartialUpdateFirehoseInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PartialUpdateFirehoseInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /dex/firehoses/{firehoseUrn}][%d] partialUpdateFirehoseInternalServerError  %+v", 500, o.Payload)
}
func (o *PartialUpdateFirehoseInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PartialUpdateFirehoseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PartialUpdateFirehoseBody partial update firehose body
swagger:model PartialUpdateFirehoseBody
*/
type PartialUpdateFirehoseBody struct {

	// configs
	Configs *models.FirehosePartialConfig `json:"configs,omitempty"`

	// description
	// Example: This firehose consumes from booking events and ingests to redis
	Description string `json:"description,omitempty"`
}

// Validate validates this partial update firehose body
func (o *PartialUpdateFirehoseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConfigs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PartialUpdateFirehoseBody) validateConfigs(formats strfmt.Registry) error {
	if swag.IsZero(o.Configs) { // not required
		return nil
	}

	if o.Configs != nil {
		if err := o.Configs.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "configs")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this partial update firehose body based on the context it is used
func (o *PartialUpdateFirehoseBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateConfigs(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PartialUpdateFirehoseBody) contextValidateConfigs(ctx context.Context, formats strfmt.Registry) error {

	if o.Configs != nil {
		if err := o.Configs.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "configs")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PartialUpdateFirehoseBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PartialUpdateFirehoseBody) UnmarshalBinary(b []byte) error {
	var res PartialUpdateFirehoseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
