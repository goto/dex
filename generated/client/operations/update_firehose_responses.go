// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goto/dex/generated/models"
)

// UpdateFirehoseReader is a Reader for the UpdateFirehose structure.
type UpdateFirehoseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFirehoseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFirehoseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateFirehoseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFirehoseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateFirehoseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateFirehoseOK creates a UpdateFirehoseOK with default headers values
func NewUpdateFirehoseOK() *UpdateFirehoseOK {
	return &UpdateFirehoseOK{}
}

/*
	UpdateFirehoseOK describes a response with status code 200, with default header values.

Found firehose with given URN
*/
type UpdateFirehoseOK struct {
	Payload *models.Firehose
}

func (o *UpdateFirehoseOK) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}][%d] updateFirehoseOK  %+v", 200, o.Payload)
}
func (o *UpdateFirehoseOK) GetPayload() *models.Firehose {
	return o.Payload
}

func (o *UpdateFirehoseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Firehose)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFirehoseBadRequest creates a UpdateFirehoseBadRequest with default headers values
func NewUpdateFirehoseBadRequest() *UpdateFirehoseBadRequest {
	return &UpdateFirehoseBadRequest{}
}

/*
	UpdateFirehoseBadRequest describes a response with status code 400, with default header values.

Update request is not valid.
*/
type UpdateFirehoseBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFirehoseBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}][%d] updateFirehoseBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateFirehoseBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFirehoseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFirehoseNotFound creates a UpdateFirehoseNotFound with default headers values
func NewUpdateFirehoseNotFound() *UpdateFirehoseNotFound {
	return &UpdateFirehoseNotFound{}
}

/*
	UpdateFirehoseNotFound describes a response with status code 404, with default header values.

Firehose with given URN was not found
*/
type UpdateFirehoseNotFound struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFirehoseNotFound) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}][%d] updateFirehoseNotFound  %+v", 404, o.Payload)
}
func (o *UpdateFirehoseNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFirehoseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFirehoseInternalServerError creates a UpdateFirehoseInternalServerError with default headers values
func NewUpdateFirehoseInternalServerError() *UpdateFirehoseInternalServerError {
	return &UpdateFirehoseInternalServerError{}
}

/*
	UpdateFirehoseInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type UpdateFirehoseInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFirehoseInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dex/firehoses/{firehoseUrn}][%d] updateFirehoseInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateFirehoseInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFirehoseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
