// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	context "context"

	gcs "github.com/goto/dex/internal/server/gcs"
	mock "github.com/stretchr/testify/mock"

	storage "cloud.google.com/go/storage"
)

// BlobObjectClient is an autogenerated mock type for the BlobObjectClient type
type BlobObjectClient struct {
	mock.Mock
}

// Objects provides a mock function with given fields: ctx, bucket, query
func (_m *BlobObjectClient) Objects(ctx context.Context, bucket string, query *storage.Query) gcs.ObjectIterator {
	ret := _m.Called(ctx, bucket, query)

	var r0 gcs.ObjectIterator
	if rf, ok := ret.Get(0).(func(context.Context, string, *storage.Query) gcs.ObjectIterator); ok {
		r0 = rf(ctx, bucket, query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gcs.ObjectIterator)
		}
	}

	return r0
}

// NewBlobObjectClient creates a new instance of BlobObjectClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBlobObjectClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *BlobObjectClient {
	mock := &BlobObjectClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
